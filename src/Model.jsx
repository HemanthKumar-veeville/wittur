/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\public\elevatorCar.glb -o src/Model.js 
*/

import React from "react";
import { useGLTF } from "@react-three/drei";
import elevatorCar from "./assets/elevatorCar.glb";

function Model({
  wallColor = "#ffffff",
  floorColor = "#333333",
  doorColor = "#666666",
  ...props
}) {
  const { nodes, materials } = useGLTF(elevatorCar);

  // Log the model structure to inspect available nodes and materials
  console.log("Model Structure:", { nodes, materials });

  // Color mapping for different parts
  const colorMapping = {
    Cube: "#e0e0e0", // Main structure
    Cube001: "#4a4a4a", // Secondary part
    Cube002: "#2c2c2c", // Another part
    Cube003: "#666666", // Another part
    // Add more mappings based on your node names
  };

  return (
    <group {...props} dispose={null}>
      {/* Map through all available meshes in the nodes object */}
      {Object.entries(nodes).map(([nodeName, node]) => {
        // Skip non-mesh nodes
        if (!node.geometry) return null;

        return (
          <mesh
            key={nodeName}
            name={nodeName}
            geometry={node.geometry}
            position={node.position}
            rotation={node.rotation}
            scale={node.scale}
          >
            <meshStandardMaterial
              color={colorMapping[nodeName] || "#ffffff"}
              metalness={0.5}
              roughness={0.5}
            />
          </mesh>
        );
      })}
    </group>
  );
}

useGLTF.preload(elevatorCar);

export default Model;
